# 1. Test with Multiple Heredocs
cat << EOF
First Heredoc Test
EOF
cat << DELIMITER
Second Heredoc Test
DELIMITER
cat << ANOTHER << EOF
Nested Heredoc 1
EOF
ANOTHER

# 2. Test with a Combination of Infiles and Outfiles
cat < infile1.txt > outfile1.txt
grep "search_term" < infile2.txt > outfile2.txt
cat < infile3.txt | wc -l > outfile3.txt

# 3. Complex Pipelines
cat file1.txt | grep "pattern" | awk '{print $1}' | sort | uniq > result.txt
ls -l | grep ".txt" | cut -d ' ' -f1,2 > files_report.txt

# 4. Nonexistent Commands
nonexistent_command
another_fake_command | grep "test"
fakecmd > testfile.txt

# 5. Mixed Valid and Invalid Commands
echo "Valid command" | nonexistent_command
nonexistent_command && echo "Should not execute"
echo "This works" || nonexistent_command

# 6. Extensive Use of Pipes and Redirections
ls | grep ".c" | wc -l > output.txt 2> errors.log
cat < infile.txt | sort | uniq > unique_sorted.txt
nonexistent_cmd | valid_cmd | grep "something"

# 7. Stress Test with Long Pipelines
echo "Start" | tee file1.txt | cat -n | awk '{print $1}' | sort -r | uniq | wc -l | tee result.log

# 8. Multiple Heredocs Combined with Redirections
cat << HEREDOC1 > outfile1.txt
Line 1
Line 2
HEREDOC1
cat << HEREDOC2 | sort > outfile2.txt
Line 3
Line 1
HEREDOC2

# 9. Edge Cases with Special Characters
echo "Special characters test" | tr -d '\n' > specialfile.txt
cat << "EOF" | grep "test"
This is a test with $special and `commands`
EOF

# 10. Nonexistent Files as Infiles
cat < nonexistentfile.txt
grep "something" < missingfile.txt

# 11. Combination of Valid and Invalid Infiles
cat < validfile.txt | grep "something" < invalidfile.txt
grep "valid_pattern" < existingfile.txt < nonexistentfile.txt

# 12. Recursive Command Execution
./my_shell << EOF
echo "Testing recursion"
./my_shell << EOL
echo "Nested execution"
EOL
EOF


Old testcases:

cat ./valgrind_line.txt
ls -l | cat -e
ls -l > file1 | cat -e > file2
ls -l > file1 | cat -e > file2 | wc -l > file3
cat | cat | ls
echo hello world | grep hello > output.txt
cat < input.txt | sort | uniq
find . -type f | xargs grep \"[ ]\" > todo_list.txt
mkdir new_folder | ls -l
tar -czf archive.tar.gz /new_folder | ls -l archive.tar.gz
echo $HOME > home_directory.txt
ps aux | grep bash | wc -l
cd /tmp | touch temp_file | ls -l temp_file
cat
sjlfkdsjfs | dslkjsdlf | sljkdsdljf
make -j re
make -j exv
make -j fclean
./minishell
clear
<<eof cat | cat >hd_output1
sjlfkdsjfs | cat | ls
cat | sjlfkdsjfs | ls
nc - l 80
echo klsjhdsdf klsjhdsdf klsjhdsdf > home_directory.txt
echo klsjhdsdf klsjhdsdf klsjhdsdf
pwd klsjhdsdf klsjhdsdf klsjhdsdf
pwd
cd
export
export
export
export
export TEST1=20000 TEST2=30000 TEST3
export empty=
unset NONEXISTENT
unset NEW1 NEW2 NEW3
env
env NEW1 NEW2 NEW3
